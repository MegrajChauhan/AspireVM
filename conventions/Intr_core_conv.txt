When adding a new core, the starting address of execution for the new core is taken from the interrupting core's Ax1 register.

EXIT interrupt: Return val in the Aa register of the interrupting core.
READ_CHAR interrupt: Aa contains the destination address for the read byte. In case the read fails, the VM shows an error and exits.
READ_STR interrupt: Aa contains the starting address[In case of a string, one address actually holds 8 bytes] and Ab contains the length of the string in bytes.

WRITE_CHAR: Aa contains the character.
WRITE_STR: Aa contains the starting address of the string, Ab contains the length of the string

gcc readWrite.o ../src/aspire_helpers.c ../src/lib/thread/aspire_threads.c ../src/Manager/input/aspire_read_input.c ../src/Manager/aspire_io.c ../src/aspire_memory.c ../src/aspire_instruction_memory.c ../src/Manager/aspire_interrupt_handler.c ../src/aspire_cpu.c ../src/Manager/aspire_manager.c ../Aspire/Aspire.c -o Aspire